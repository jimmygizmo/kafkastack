version: '3'

networks:
  kafkapoc-network:

volumes:
  datavolume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./datavolume
  # EXAMPLE of mapping another subdir. Each subdir is done with its own volume alias.
#  zoovolumefoo:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: ./zoovolume/foo
  zoovolumedata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./zoovolume/data
  kafkavolume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./kafkavolume

services:


  # ---- ZOOKEEPER ----
  kafkapoc-zookeeper:
    image: wurstmeister/zookeeper
    container_name: kafkapoc-zookeeper
#    build: ./zookeeper  # Future custom build, Dockerfile
    networks:
      - kafkapoc-network
    ports:
      - "2181:2181"
    volumes:
#      - zoovolumeconf:/opt/zookeeper-3.4.13/foo  # EXAMPLE. See comments above near volumes.
      - zoovolumedata:/opt/zookeeper-3.4.13/data


  # ---- KAFKA ----
  kafkapoc-kafka:
    image: wurstmeister/kafka
    container_name: kafkapoc-kafka
#    build: ./kafka  # Future custom build, Dockerfile
# WHAT DEPENDS ON WHAT FIRST? zookeeper or kafka??
# I think ZooKeeper has to be up first.
#    depends_on:
#      - kafkapoc-zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: kafkapoc-zookeeper:2181
    networks:
      - kafkapoc-network
    ports:
      - "9092:9092"
    volumes:
      - kafkavolume:/kafka


  # ---- NODE KAFKA CLIENT ----
  kafkapoc-node:
    container_name: kafkapoc-node
    build: ./node
    depends_on:
      - kafkapoc-kafka
    #    SETUP: To use a full repository URL image name, customize a URL like the one here:
    #    image: <YOUR-AWS-USER-ID-NUMBER>.dkr.ecr.us-west-2.amazonaws.com/<YOUR-AWS-REPO-NAME>:kafkapoc-kafka
    image: kafkapoc-node
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: localhost
#      KAFKA_ZOOKEEPER_CONNECT: kafkapoc-zookeeper:2181
    networks:
      - kafkapoc-network
# Later we may have a port listening for WS connections from the react app. Proposed: 44555
#    ports:
#      - "44555:44555"
    volumes:
      - datavolume:/app/datavolume
    # wait-for-it.sh must target the internal port number, not the external
    command: [
      "/app/wait-for-it.sh",
      "--host=kafkapoc-kafka",
      "--port=9092",
      "--timeout=20",
      "--",
      "/usr/local/bin/node",
      "/app/src/producerBasic.js",
    ]

# Entrypoint command options:
# /app/src/index.js
# /app/src/producerBasic.js


######################################################################################################################


# https://hub.docker.com/r/wurstmeister/kafka
# https://hub.docker.com/r/wurstmeister/zookeeper/

